{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["DayWeekSelectionPage","props","dayButtons","i","push","className","currDay","onClick","stopTimer","checkboxes","document","getElementsByTagName","length","type","checked","setDay","handleChangeDay","program","Exercise","setWeight","setNumber","adjustment","pageNumber","setReps","previousName","dayProgram","name","exerciseName","exerciseNotes","notes","nextName","sets","Date","time","toISOString","substr","map","set","index","Set","id","reps","RPE","weight","startTimer","useState","useEffect","checkbox","target","size","App","addEventListener","e","preventDefault","update","setProgram","day","setTime","timerInterval","setTimerInterval","clearInterval","date","incrementTimer","setInterval","getTime","exerciseNum","setNum","newWeight","modifiedExercises","localStorage","setItem","JSON","stringify","newReps","loadedProgram","parse","getItem","forEach","index1","exercise","index2","console","log","exerciseList","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ac3d8ea8.chunk.js","sourcesContent":["import './App.css';\nimport {useEffect, useState} from \"react\";\n\nfunction App() {\n    document.addEventListener('gesturestart', function(e) {\n        e.preventDefault();\n    });\n\n    document.addEventListener('gesturechange', function(e) {\n        e.preventDefault();\n    });\n\n    document.addEventListener('gestureend', function(e) {\n        e.preventDefault();\n    });\n\n    const [program, setProgram] = useState([\n        [{\n            name: \"BACK SQUAT\",\n            notes: \"LAST SET REST 15 SECONDS, DO ANOTHER 2-3 REPS, REST ANOTHER 15 SECONDS, DO ANOTHER 1-2 REPS\",\n            sets: [{reps: 6, RPE: \"n/a\", weight: 80}, {reps: 6, RPE: \"n/a\", weight: 80}, {\n                reps: 6,\n                RPE: \"n/a\",\n                weight: 80\n            },],\n            update: true,\n        }, {\n            name: \"TRICEP KICKBACKS\",\n            notes: \"COMPLETE LAST SET, REST 15 SECONDS, DO ANOTHER 2-3 REPS, REST ANOTHER 15 SECONDS, DO ANOTHER 1-2 REPS\",\n            sets: [{reps: 6, RPE: \"n/a\", weight: 70}, {reps: 6, RPE: \"n/a\", weight: 70}, {\n                reps: 6,\n                RPE: \"n/a\",\n                weight: 70\n            },],\n            update: true,\n        }, {\n            name: \"DB INCLINE PRESS\",\n            notes: \"ON THE LAST SET DO SLOW ECCENTRICS, THEN HOLD THE STRETCH AFTER THE LAST REP FOR AS LONG AS POSSIBLE\",\n            sets: [{reps: 8, RPE: \"n/a\", weight: 25}, {reps: 8, RPE: \"n/a\", weight: 25}, {\n                reps: 8,\n                RPE: \"n/a\",\n                weight: 25\n            },]\n        }, {\n            name: \"DB LAT RAISE\",\n            notes: \"COMPLETE LAST SET, REST 15 SECONDS, THEN DO AS MANY SETS OF 3 AS POSSIBLE WITH 15 SECONDS OF REST BETWEEN\",\n            sets: [{reps: 12, RPE: \"n/a\", weight: 10}, {reps: 12, RPE: \"n/a\", weight: 10}, {\n                reps: 12,\n                RPE: \"n/a\",\n                weight: 10\n            },]\n        }, {\n            name: \"CALF RAISE\",\n            notes: \"COMPLETE LAST SET, REST 15 SECONDS, THEN DO AS MANY SETS OF 3 AS POSSIBLE WITH 15 SECONDS OF REST BETWEEN\",\n            sets: [{reps: 10, RPE: \"n/a\", weight: 50}, {reps: 10, RPE: \"n/a\", weight: 50}, {\n                reps: 10,\n                RPE: \"n/a\",\n                weight: 50\n            },]\n        }],\n        [{\n            name: \"DEADLIFT\",\n            notes: \"LAST SET REST 15 SECONDS, DO ANOTHER 2-3 REPS, REST ANOTHER 15 SECONDS, DO ANOTHER 1-2 REPS\",\n            sets: [{reps: 6, RPE: \"n/a\", weight: 115}, {reps: 6, RPE: \"n/a\", weight: 115}, {\n                reps: 6,\n                RPE: \"n/a\",\n                weight: 115\n            },]\n        }, {\n            name: \"DB PULLOVER\",\n            notes: \"ON THE LAST SET DO SLOW ECCENTRICS, THEN HOLD THE STRETCH AFTER THE LAST REP FOR AS LONG AS POSSIBLE\",\n            sets: [{reps: 8, RPE: \"n/a\", weight: 27.5}, {reps: 8, RPE: \"n/a\", weight: 27.5}, {\n                reps: 8,\n                RPE: \"n/a\",\n                weight: 27.5\n            },]\n        }, {\n            name: \"FACE PULLS\",\n            notes: \"COMPLETE LAST SET, REST 15 SECONDS, THEN DO AS MANY SETS OF 3 AS POSSIBLE WITH 15 SECONDS OF REST BETWEEN\",\n            sets: [{reps: 10, RPE: \"n/a\", weight: 15}, {reps: 10, RPE: \"n/a\", weight: 15}, {\n                reps: 10,\n                RPE: \"n/a\",\n                weight: 15\n            },],\n            update: true,\n        }, {\n            name: \"HAMMER CURLS\",\n            notes: \"LAST SET REST 15 SECONDS, DO ANOTHER 2-3 REPS, REST ANOTHER 15 SECONDS, DO ANOTHER 1-2 REPS\",\n            sets: [{reps: 6, RPE: \"n/a\", weight: 40}, {reps: 6, RPE: \"n/a\", weight: 40}, {\n                reps: 6,\n                RPE: \"n/a\",\n                weight: 40\n            },],\n            update: true,\n        }, {\n            name: \"AB ROLLER\",\n            notes: \"COMPLETE LAST SET, REST 15 SECONDS, THEN DO AS MANY SETS OF 3 AS POSSIBLE WITH 15 SECONDS OF REST BETWEEN\",\n            sets: [{reps: 10, RPE: \"n/a\", weight: 45}, {reps: 10, RPE: \"n/a\", weight: 45}, {\n                reps: 10,\n                RPE: \"n/a\",\n                weight: 45\n            },],\n            update: true,\n        }],\n        [{\n            name: \"MILITARY PRESS\",\n            notes: \"LAST SET REST 15 SECONDS, DO ANOTHER 2-3 REPS, REST ANOTHER 15 SECONDS, DO ANOTHER 1-2 REPS\",\n            sets: [{reps: 6, RPE: \"n/a\", weight: 50}, {reps: 6, RPE: \"n/a\", weight: 50}, {\n                reps: 6,\n                RPE: \"n/a\",\n                weight: 50\n            },]\n        }, {\n            name: \"GOBLET SQUAT\",\n            notes: \"ON THE LAST SET DO SLOW ECCENTRICS, THEN HOLD THE STRETCH AFTER THE LAST REP FOR AS LONG AS POSSIBLE\",\n            sets: [{reps: 8, RPE: \"n/a\", weight: 70}, {reps: 8, RPE: \"n/a\", weight: 70}, {\n                reps: 8,\n                RPE: \"n/a\",\n                weight: 70\n            },],\n            update: true,\n        }, {\n            name: \"EZ BAR SKULLCRUSHER\",\n            notes: \"ON THE LAST SET DO SLOW ECCENTRICS, THEN HOLD THE STRETCH AFTER THE LAST REP FOR AS LONG AS POSSIBLE\",\n            sets: [{reps: 8, RPE: \"n/a\", weight: 35}, {reps: 8, RPE: \"n/a\", weight: 35}, {\n                reps: 8,\n                RPE: \"n/a\",\n                weight: 35\n            },]\n        },\n            {\n                name: \"MACHINE CHEST PRESS\",\n                notes: \"COMPLETE LAST SET, REST 15 SECONDS, THEN DO AS MANY SETS OF 3 AS POSSIBLE WITH 15 SECONDS OF REST BETWEEN\",\n                sets: [{reps: 10, RPE: \"n/a\", weight: 60}, {reps: 10, RPE: \"n/a\", weight: 60}, {\n                    reps: 10,\n                    RPE: \"n/a\",\n                    weight: 60\n                },]\n            }, {\n            name: \"CALF RAISE\",\n            notes: \"COMPLETE LAST SET, REST 15 SECONDS, THEN DO AS MANY SETS OF 3 AS POSSIBLE WITH 15 SECONDS OF REST BETWEEN\",\n            sets: [{reps: 10, RPE: \"n/a\", weight: 0}, {reps: 10, RPE: \"n/a\", weight: 0}, {\n                reps: 10,\n                RPE: \"n/a\",\n                weight: 0\n            },],\n            update: true,\n        }],\n        [{\n            name: \"WEIGHTED PULL UPS\",\n            notes: \"LAST SET REST 15 SECONDS, DO ANOTHER 2-3 REPS, REST ANOTHER 15 SECONDS, DO ANOTHER 1-2 REPS\",\n            sets: [{reps: 6, RPE: \"n/a\", weight: 70}, {reps: 6, RPE: \"n/a\", weight: 70}, {\n                reps: 6,\n                RPE: \"n/a\",\n                weight: 70\n            },],\n            update: true,\n        }, {\n            name: \"SEATED ROW\",\n            notes: \"ON THE LAST SET DO SLOW ECCENTRICS, THEN HOLD THE STRETCH AFTER THE LAST REP FOR AS LONG AS POSSIBLE\",\n            sets: [{reps: 8, RPE: \"n/a\", weight: 50}, {reps: 8, RPE: \"n/a\", weight: 50}, {\n                reps: 8,\n                RPE: \"n/a\",\n                weight: 50\n            },]\n        }, {\n            name: \"LYING LEG CURL\",\n            notes: \"COMPLETE LAST SET, REST 15 SECONDS, THEN DO AS MANY SETS OF 3 AS POSSIBLE WITH 15 SECONDS OF REST BETWEEN\",\n            sets: [{reps: 10, RPE: \"n/a\", weight: 50}, {reps: 10, RPE: \"n/a\", weight: 50}, {\n                reps: 10,\n                RPE: \"n/a\",\n                weight: 50\n            },]\n        }, {\n            name: \"CONCENTRATION CURL\",\n            notes: \"ON THE LAST SET DO SLOW ECCENTRICS, THEN HOLD THE STRETCH AFTER THE LAST REP FOR AS LONG AS POSSIBLE\",\n            sets: [{reps: 6, RPE: \"n/a\", weight: 17.5}, {reps: 6, RPE: \"n/a\", weight: 17.5}, {\n                reps: 6,\n                RPE: \"n/a\",\n                weight: 17.5\n            },]\n        }, {\n            name: \"WEIGHTED CRUNCH\",\n            notes: \"COMPLETE LAST SET, REST 15 SECONDS, THEN DO AS MANY SETS OF 3 AS POSSIBLE WITH 15 SECONDS OF REST BETWEEN\",\n            sets: [{reps: 10, RPE: \"n/a\", weight: 50}, {reps: 10, RPE: \"n/a\", weight: 50}, {\n                reps: 10,\n                RPE: \"n/a\",\n                weight: 50\n            },],\n            update: true,\n        }],\n        [{\n            name: \"BENCH PRESS\",\n            notes: \"LAST SET REST 15 SECONDS, DO ANOTHER 2-3 REPS, REST ANOTHER 15 SECONDS, DO ANOTHER 1-2 REPS\",\n            sets: [{reps: 6, RPE: \"n/a\", weight: 70},{reps: 6, RPE: \"n/a\", weight: 70},{reps: 6, RPE: \"n/a\", weight: 70},],\n        }, {\n            name: \"LEAN AWAY LAT RAISE\",\n            notes: \"ON THE LAST SET DO SLOW ECCENTRICS, THEN HOLD THE STRETCH AFTER THE LAST REP FOR AS LONG AS POSSIBLE\",\n            sets: [{reps: 8, RPE: \"n/a\", weight: 20},{reps: 8, RPE: \"n/a\", weight: 20},{reps: 8, RPE: \"n/a\", weight: 20},],\n        }, {\n            name: \"LEG EXTENSION\",\n            notes: \"COMPLETE LAST SET, REST 15 SECONDS, THEN DO AS MANY SETS OF 3 AS POSSIBLE WITH 15 SECONDS OF REST BETWEEN\\\"\",\n            sets: [{reps: 8, RPE: \"n/a\", weight: 35},{reps: 8, RPE: \"n/a\", weight: 35},{reps: 8, RPE: \"n/a\", weight: 35},],\n            update: true,\n        }, {\n            name: \"ROPE TRICEP PUSHDOWN\",\n            notes: \"COMPLETE LAST SET, REST 15 SECONDS, THEN DO AS MANY SETS OF 3 AS POSSIBLE WITH 15 SECONDS OF REST BETWEEN\",\n            sets: [{reps: 10, RPE: \"n/a\", weight: 25},{reps: 10, RPE: \"n/a\", weight: 25},{reps: 10, RPE: \"n/a\", weight: 25},],\n        }, {\n            name: \"CALF  RAISE\",\n            notes: \"COMPLETE LAST SET, REST 15 SECONDS, THEN DO AS MANY SETS OF 3 AS POSSIBLE WITH 15 SECONDS OF REST BETWEEN\",\n            sets: [{reps: 10, RPE: \"n/a\", weight: 45},{reps: 10, RPE: \"n/a\", weight: 45},{reps: 10, RPE: \"n/a\", weight: 45},],\n            update: true,\n        }],\n        [{\n            name: \"CHEST SUPPORTED ROW\",\n            notes: \"LAST SET REST 15 SECONDS, DO ANOTHER 2-3 REPS, REST ANOTHER 15 SECONDS, DO ANOTHER 1-2 REPS\",\n            sets: [{reps: 6, RPE: \"n/a\", weight: 55}, {reps: 6, RPE: \"n/a\", weight: 55}, {\n                reps: 6,\n                RPE: \"n/a\",\n                weight: 55\n            },],\n            update: true,\n        }, {\n            name: \"GLUTE HAM RAISE\",\n            notes: \"ON THE LAST SET DO SLOW ECCENTRICS, THEN HOLD THE STRETCH AFTER THE LAST REP FOR AS LONG AS POSSIBLE\",\n            sets: [{reps: 8, RPE: \"n/a\", weight: 60}, {reps: 8, RPE: \"n/a\", weight: 60}, {\n                reps: 8,\n                RPE: \"n/a\",\n                weight: 60\n            },],\n            update: true,\n        }, {\n            name: \"STRAIGHT ARM PULLDOWN\",\n            notes: \"ON THE LAST SET DO SLOW ECCENTRICS, THEN HOLD THE STRETCH AFTER THE LAST REP FOR AS LONG AS POSSIBLE\",\n            sets: [{reps: 8, RPE: \"n/a\", weight: 25}, {reps: 8, RPE: \"n/a\", weight: 25}, {\n                reps: 8,\n                RPE: \"n/a\",\n                weight: 25\n            },]\n        }, {\n            name: \"CABLE CURL\",\n            notes: \"COMPLETE LAST SET, REST 15 SECONDS, THEN DO AS MANY SETS OF 3 AS POSSIBLE WITH 15 SECONDS OF REST BETWEEN\",\n            sets: [{reps: 10, RPE: \"n/a\", weight: 30}, {reps: 10, RPE: \"n/a\", weight: 30}, {\n                reps: 10,\n                RPE: \"n/a\",\n                weight: 30\n            },]\n        }, {\n            name: \"HANGING LEG RAISE\",\n            notes: \"COMPLETE LAST SET, REST 15 SECONDS, THEN DO AS MANY SETS OF 3 AS POSSIBLE WITH 15 SECONDS OF REST BETWEEN\",\n            sets: [{reps: 10, RPE: \"n/a\", weight: 0}, {reps: 10, RPE: \"n/a\", weight: 0}, {\n                reps: 10,\n                RPE: \"n/a\",\n                weight: 0\n            },]\n        }]\n    ]);\n    const [day, setDay] = useState(0)\n\n    const [time, setTime] = useState(0)\n    const [timerInterval, setTimerInterval] = useState()\n\n    function startTimer() {\n        if (timerInterval) {\n            clearInterval(timerInterval)\n            setTimerInterval()\n        }\n        const date = new Date()\n        const incrementTimer = setInterval(() => {\n            setTime(((new Date().getTime()) - date.getTime()) / 1000)\n        }, 1000)\n        setTimerInterval(incrementTimer)\n    }\n\n    function stopTimer() {\n        if (timerInterval) {\n            clearInterval(timerInterval)\n            setTimerInterval()\n        }\n        setTime(0)\n    }\n\n    useEffect(() => {\n        let loadedProgram = JSON.parse(localStorage.getItem(\"program\"))\n        if (loadedProgram) {\n\n            program.forEach((day, index1) => {\n                day.forEach((exercise, index2) => {\n                    if (\"update\" in exercise) {\n                        loadedProgram[index1][index2].name = exercise.name\n                        console.log(\"updated!\")\n                    }\n                })\n            })\n            localStorage.setItem(\"program\", JSON.stringify(loadedProgram))\n            setProgram(loadedProgram)\n        }\n    }, [])\n\n\n    function setWeight(exerciseNum, setNum, newWeight) {\n        let modifiedExercises = [...program];\n        modifiedExercises[day][exerciseNum].sets[setNum].weight = newWeight;\n        setProgram(modifiedExercises)\n\n        localStorage.setItem(\"program\", JSON.stringify(program))\n    }\n\n    function setReps(exerciseNum, setNum, newReps) {\n        let modifiedExercises = [...program];\n        modifiedExercises[day][exerciseNum].sets[setNum].reps = newReps;\n        setProgram(modifiedExercises)\n\n        localStorage.setItem(\"program\", JSON.stringify(program))\n    }\n\n    if (program) {\n        const exerciseList = program[day].map((exercise, index) => <Exercise dayProgram={program[day]}\n                                                                             key={(day * index) + index}\n                                                                             pageNumber={index + 1}\n                                                                             setWeight={setWeight}\n                                                                             setReps={setReps} time={time}\n                                                                             startTimer={startTimer}\n                                                                             stopTimer={stopTimer}/>)\n        return (\n            <div>\n                <DayWeekSelectionPage setDay={setDay}\n                                      currDay={day} program={program} stopTimer={stopTimer}/>\n                <div>\n                    {exerciseList}\n                </div>\n            </div>\n        );\n    } else {\n        return (\n            <p>Loading Data</p>\n        );\n    }\n}\n\nfunction DayWeekSelectionPage(props) {\n    const dayButtons = []\n    for (let i = 1; i < props.program.length + 1; i++) {\n        dayButtons.push(<button className={props.currDay === i - 1 ? \"dayWeekButtonSelected\" : \"dayWeekButton\"} key={i}\n                                onClick={() => handleChangeDay(i - 1)}>{i}</button>)\n    }\n\n    function handleChangeDay(i) {\n        props.stopTimer()\n        let checkboxes = document.getElementsByTagName('input');\n        for (let i = 0; i < checkboxes.length; i++) {\n            if (checkboxes[i].type === 'checkbox') {\n                checkboxes[i].checked = false;\n            }\n        }\n        props.setDay(i)\n    }\n\n    function handleReset() {\n        localStorage.setItem(\"program\", null)\n    }\n\n    return (\n        <div className=\"DayWeekSelectionPage\">\n            <div className=\"dayWeekContainer\">\n                <h2 className=\"promptHeader\">Program</h2>\n                <h2 className=\"promptHeader\">Select a day</h2>\n\n                <h3>Day</h3>\n                {dayButtons}\n\n            </div>\n        </div>\n    );\n}\n\nfunction Exercise(props) {\n    function setWeight(setNumber, adjustment) {\n        props.setWeight(props.pageNumber - 1, setNumber, adjustment)\n    }\n\n    function setReps(setNumber, adjustment) {\n        props.setReps(props.pageNumber - 1, setNumber, adjustment)\n    }\n\n    let previousName = props.pageNumber !== 1 ? \"⬆ \" + props.dayProgram[props.pageNumber - 2].name : \"\"\n    let exerciseName = props.dayProgram[props.pageNumber - 1].name\n    let exerciseNotes = props.dayProgram[props.pageNumber - 1].notes\n    let nextName = props.pageNumber !== props.dayProgram.length ? \"⬇ \" + props.dayProgram[props.pageNumber].name : \" \"\n    let sets = props.dayProgram[props.pageNumber - 1].sets\n\n    return (\n        <section className=\"exercisePage\">\n            <div className=\"topBar\">\n                <p className=\"previousExerciseName\">{previousName}</p>\n                <p className=\"timer\">RESTING TIME: {new Date(props.time * 1000).toISOString().substr(15, 4)}m</p>\n                <p className=\"nextSetReminder\">{props.time > 180 ? \"START NEXT SET!\" : \"\"}</p>\n            </div>\n\n            <div className=\"mainContent\">\n                <p className=\"exerciseName\">{exerciseName}</p>\n                <div className=\"sets\">\n                    {sets.map((set, index) => <Set id={index} key={(props.pageNumber * index) + index} reps={set.reps}\n                                                   RPE={set.RPE}\n                                                   weight={set.weight}\n                                                   startTimer={props.startTimer} stopTimer={props.stopTimer}\n                                                   setWeight={setWeight}\n                                                   setReps={setReps}/>)}\n                </div>\n                <div className=\"notes\">\n                    <header className=\"notesHeader\">NOTES</header>\n                    <p className=\"notesContent\">{exerciseNotes}</p>\n                </div>\n            </div>\n\n            <div className=\"bottomBar\">\n                <p className=\"nextExerciseName\">{nextName}</p>\n            </div>\n        </section>\n    )\n}\n\nfunction Set(props) {\n\n    const [weight, setWeight] = useState(props.weight)\n    const [reps, setReps] = useState(props.reps)\n\n    useEffect(() => {\n        setWeight(props.weight)\n        setReps(props.reps)\n    }, [props.weight, props.reps])\n\n    function handleCheck(checkbox) {\n        if (checkbox.target.checked) {\n            props.setWeight(props.id, weight)\n            props.setReps(props.id, reps)\n            props.startTimer()\n        } else {\n            props.stopTimer()\n        }\n    }\n\n    return (<div className=\"set\">\n        <input className=\"checkbox\" type=\"checkbox\" id={\"set\" + props.id} onClick={handleCheck} size=\"medium\"/>\n        <div>\n            <p className=\"setDescriptor\">Reps: {reps}</p>\n            <p className=\"lastWeekDescriptor\">Last Wk: {props.reps}</p>\n        </div>\n        <div className=\"adjustmentButtonContainer\">\n            <button className=\"adjustmentButton\" onClick={() => setReps(reps + 1)}>&uarr;</button>\n            <br/>\n            <button className=\"adjustmentButton\" onClick={() => setReps(reps - 1)}>&darr;</button>\n        </div>\n\n        <div>\n            <p className=\"setDescriptor\">Weight: {weight}kg</p>\n            <p className=\"lastWeekDescriptor\">Last Wk: {props.weight}kg</p>\n        </div>\n        <div className=\"adjustmentButtonContainer\">\n            <button className=\"adjustmentButton\" onClick={() => setWeight(weight + 1.25)}>&uarr;</button>\n            <br/>\n            <button className=\"adjustmentButton\" onClick={() => setWeight(weight - 1.25)}>&darr;</button>\n        </div>\n\n    </div>)\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}